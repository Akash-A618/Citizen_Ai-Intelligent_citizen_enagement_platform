# -*- coding: utf-8 -*-
"""Citizen AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n0e3Kp4l4zSRsRB1JFnjoqS0kFPyKTV1
"""

pip install ibm-granite/granite-embedding-small-english-r2

#pip install ibm-granite/granite-embedding-small-english-r2

# Additional functionalities

def emergency_preparedness(disaster_type):
    prompt = f"Provide a detailed emergency preparedness guide for {disaster_type}. Include:\n1. Safety measures\n2. Emergency kit essentials\n3. Do's and Don'ts\n4. Post-disaster recovery tips"
    return generate_response(prompt, max_length=1000)

def development_projects(city_name):
    prompt = f"Provide an overview of ongoing and upcoming government development projects in {city_name}. Include:\n1. Infrastructure projects\n2. Smart city initiatives\n3. Budget allocations\n4. Expected benefits for citizens"
    return generate_response(prompt, max_length=1000)


# Update Gradio Interface
with gr.Blocks() as app:
    gr.Markdown("# City Analysis & Citizen Services AI")
    with gr.Tabs():

        # City Analysis
        with gr.TabItem("City Analysis"):
            with gr.Row():
                with gr.Column():
                    city_input = gr.Textbox(
                        label="Enter City Name",
                        placeholder="e.g., New York, London, Mumbai...",
                        lines=1
                    )
                    analyze_btn = gr.Button("Analyze City")
                with gr.Column():
                    city_output = gr.Textbox(label="City Analysis (Crime Index & Accidents)", lines=15)
            analyze_btn.click(city_analysis, inputs=city_input, outputs=city_output)

        # Citizen Services
        with gr.TabItem("Citizen Services"):
            with gr.Row():
                with gr.Column():
                    citizen_query = gr.Textbox(
                        label="Your Query",
                        placeholder="Ask about public services, government policies, civic issues...",
                        lines=4
                    )
                    query_btn = gr.Button("Get Information")
                with gr.Column():
                    citizen_output = gr.Textbox(label="Government Response", lines=15)
            query_btn.click(citizen_interaction, inputs=citizen_query, outputs=citizen_output)

        # Emergency Preparedness
        with gr.TabItem("Emergency Preparedness"):
            with gr.Row():
                with gr.Column():
                    disaster_input = gr.Textbox(
                        label="Enter Disaster Type",
                        placeholder="e.g., Earthquake, Flood, Fire, Pandemic...",
                        lines=1
                    )
                    disaster_btn = gr.Button("Get Preparedness Guide")
                with gr.Column():
                    disaster_output = gr.Textbox(label="Preparedness Guide", lines=15)
            disaster_btn.click(emergency_preparedness, inputs=disaster_input, outputs=disaster_output)

        # Development Projects
        with gr.TabItem("Development Projects"):
            with gr.Row():
                with gr.Column():
                    dev_city_input = gr.Textbox(
                        label="Enter City Name",
                        placeholder="e.g., New Delhi, Tokyo, Los Angeles...",
                        lines=1
                    )
                    dev_btn = gr.Button("Get Development Info")
                with gr.Column():
                    dev_output = gr.Textbox(label="Development Projects Info", lines=15)
            dev_btn.click(development_projects, inputs=dev_city_input, outputs=dev_output)

    app.launch(share=True)